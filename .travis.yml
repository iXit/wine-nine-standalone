language: c

dist: xenial

git:
  depth: false

jobs:
  include:
    - stage: build
      name: "Build test"
      addons:
        apt:
          update: true
          sources:
            # xenial doesn't have relevant winegcc fixes
            - sourceline: 'deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main'
              key_url: 'https://dl.winehq.org/wine-builds/winehq.key'
          packages:
            # x86 cross compiler
            - gcc-multilib
            # required to update meson
            - python3-pip
            # winehq releases
            - winehq-stable
            - wine-stable-dev
            # regular dependencies
            - libx11-dev
            - libx11-xcb-dev
            - libxcb1-dev
            - libxcb-dri3-dev
            - libxcb-dri2-0-dev
            - libxcb-present-dev
            - libxcb-xfixes0-dev
            - libgl1-mesa-dev
            - libegl1-mesa-dev
            - libx11-dev:i386
            - libx11-xcb-dev:i386
            - libxcb1-dev:i386
            - libxcb-dri3-dev:i386
            - libxcb-dri2-0-dev:i386
            - libxcb-present-dev:i386
            - libxcb-xfixes0-dev:i386
            - libgl1-mesa-dev:i386
            # the -dev package introduces a conflict, see below
            - libegl1-mesa:i386
      env:
        - RELEASE_TARBALL="$HOME/gallium-nine-standalone-${TRAVIS_TAG:-$TRAVIS_COMMIT}.tar.gz"
      before_install:
        # conflict between libxkbcommon-dev and libxkbcommon-dev:i386, use a hammer to apply force
        - sudo apt-get -y download libegl1-mesa-dev:i386
        - sudo dpkg -i --force-depends *.deb
      install:
        # xenial doesn't have libd3dadapter9-mesa-dev, assemble headers/.pc by hand
        - mkdir -p /tmp/build/include/d3dadapter
        - wget -q -O /tmp/build/include/d3dadapter/d3dadapter9.h "https://raw.githubusercontent.com/mesa3d/mesa/master/include/d3dadapter/d3dadapter9.h"
        - wget -q -O /tmp/build/include/d3dadapter/drm.h "https://raw.githubusercontent.com/mesa3d/mesa/master/include/d3dadapter/drm.h"
        - wget -q -O /tmp/build/include/d3dadapter/present.h "https://raw.githubusercontent.com/mesa3d/mesa/master/include/d3dadapter/present.h"
        - mkdir -p /tmp/build/lib/x86_64-linux-gnu/pkgconfig /tmp/build/lib/i386-linux-gnu/pkgconfig
        - "printf 'prefix=/tmp/build\nlibdir=${prefix}/lib/x86_64-linux-gnu\nincludedir=${prefix}/include\n\nName: d3d\nDescription: Native D3D driver modules\nVersion: 1.0.0\nRequires.private: libdrm\nCflags: -I${includedir}\n' | tee /tmp/build/lib/x86_64-linux-gnu/pkgconfig/d3d.pc"
        - "printf 'prefix=/tmp/build\nlibdir=${prefix}/lib/i386-linux-gnu\nincludedir=${prefix}/include\n\nName: d3d\nDescription: Native D3D driver modules\nVersion: 1.0.0\nRequires.private: libdrm\nCflags: -I${includedir}\n' | tee /tmp/build/lib/i386-linux-gnu/pkgconfig/d3d.pc"
        - export PKG_CONFIG_PATH="/tmp/build/lib/x86_64-linux-gnu/pkgconfig:/tmp/build/lib/i386-linux-gnu/pkgconfig"
        # update ninja for meson
        - mkdir -p /tmp/build/bin
        - wget -q -O /tmp/build/ninja-linux.zip "https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip"
        - unzip -o -d /tmp/build/bin /tmp/build/ninja-linux.zip
        - chmod 755 /tmp/build/bin/ninja
        - export PATH="/tmp/build/bin:$PATH"
        # update meson via python3-pip
        - pip3 install --user setuptools
        - pip3 install --user --upgrade pip
        - pip3 install --user meson
      script:
        - ./release.sh -o "$RELEASE_TARBALL" -- -Ddri2=true -Ddistro-independent=true
      deploy:
        provider: releases
        condition: -n "$GITHUB_OAUTH_TOKEN"
        api_key: "$GITHUB_OAUTH_TOKEN"
        file: "$RELEASE_TARBALL"
        skip_cleanup: true
        draft: true
        on:
          tags: true

    - stage: deploy-unstable
      name: "Packaging unstable"
      if: env(SIRO_COPR_KEY) IS present AND type = push AND branch = master AND tag IS blank
      services:
        - docker
      addons:
        apt:
          update: true
          packages:
            # required for copr-cli
            - python3-pip
      install:
        # Get the rpmbuilder
        - docker pull mgruener/rpmbuild
        # Get copr-cli
        - pip3 install --user setuptools
        - pip3 install --user --upgrade pip
        - pip3 install --user copr-cli
      script:
        # create the folder structure for RPMBUILD
        - mkdir -p $HOME/rpmbuild/SOURCES $HOME/rpmbuild/SPECS $HOME/rpmbuild/SRPMS $HOME/rpmbuild/BUILD $HOME/rpmbuild/RPMS $HOME/rpmbuild/BUILDROOT
        - chmod -R 0777 $HOME/rpmbuild
        # create a copy of the sources for RPMBUILD
        - mkdir -p $HOME/rpmbuild/SOURCES/tmp/wine-nine-standalone-$TRAVIS_COMMIT/
        - cp -r * $HOME/rpmbuild/SOURCES/tmp/wine-nine-standalone-$TRAVIS_COMMIT/
        - tar -czf $HOME/rpmbuild/SOURCES/$TRAVIS_COMMIT.tar.gz -C $HOME/rpmbuild/SOURCES/tmp/ .
        - rm -rf $HOME/rpmbuild/SOURCES/tmp/wine-nine-standalone-$TRAVIS_COMMIT/
        # generate metadata for the SPEC file
        - export PATCHLEVEL=$(git rev-list --count master)
        - export MYCHANGELOG=$(LANG=en git log --pretty=format:"* %cd %an <%ae>%n- %s%n" --date=format:"%a %b %d %Y" -n 10| sed 's/$/ \\/')
        # should use rpmbuild --define '', but whitespace and newline make it difficult...
        - echo "%define patchlevel $PATCHLEVEL\n" > $HOME/rpmbuild/SPECS/wine-nine-unstable.spec
        - echo "%define commithash $TRAVIS_COMMIT\n" >> $HOME/rpmbuild/SPECS/wine-nine-unstable.spec
        - echo "%define mychangelog $MYCHANGELOG\n" >> $HOME/rpmbuild/SPECS/wine-nine-unstable.spec
        - cat ./packaging/SPECS/wine-nine-unstable.spec >> $HOME/rpmbuild/SPECS/wine-nine-unstable.spec
        # create the SRPMs
        - sudo docker run -it --rm -v $HOME/rpmbuild/:/home/rpmbuild/rpmbuild:z mgruener/rpmbuild rpmbuild -bs --define 'dist .fc28' rpmbuild/SPECS/wine-nine-unstable.spec
        - sudo docker run -it --rm -v $HOME/rpmbuild/:/home/rpmbuild/rpmbuild:z mgruener/rpmbuild rpmbuild -bs --define 'dist .fc29' rpmbuild/SPECS/wine-nine-unstable.spec
        - mkdir -p $HOME/.config/
        - echo "$SIRO_COPR_KEY"|base64 -d - > $HOME/.config/copr
        # upload to copr
        - copr-cli build --nowait wine-nine-unstable $HOME/rpmbuild/SRPMS/wine-nine-unstable*.src.rpm

    - stage: deploy-stable
      name: "Packaging stable"
      if: env(SIRO_COPR_KEY) IS present AND type = push AND tag IS present
      services:
        - docker
      addons:
        apt:
          update: true
          packages:
            # required for copr-cli
            - python3-pip
      install:
        # Get the rpmbuilder
        - docker pull mgruener/rpmbuild
        # Get copr-cli
        - pip3 install --user setuptools
        - pip3 install --user --upgrade pip
        - pip3 install --user copr-cli
      script:
        # create the folder structure for RPMBUILD
        - mkdir -p $HOME/rpmbuild/SOURCES $HOME/rpmbuild/SPECS $HOME/rpmbuild/SRPMS $HOME/rpmbuild/BUILD $HOME/rpmbuild/RPMS $HOME/rpmbuild/BUILDROOT
        - chmod -R 0777 $HOME/rpmbuild
        # create a copy of the sources for RPMBUILD
        - mkdir -p $HOME/rpmbuild/SOURCES/tmp/wine-nine-standalone-$TRAVIS_COMMIT/
        - cp -r * $HOME/rpmbuild/SOURCES/tmp/wine-nine-standalone-$TRAVIS_COMMIT/
        - tar -czf $HOME/rpmbuild/SOURCES/$TRAVIS_COMMIT.tar.gz -C $HOME/rpmbuild/SOURCES/tmp/ .
        - rm -rf $HOME/rpmbuild/SOURCES/tmp/wine-nine-standalone-$TRAVIS_COMMIT/
        # generate metadata for the SPEC file
        - export PATCHLEVEL=$(git rev-list --count master)
        - export MYCHANGELOG=$(LANG=en git log --pretty=format:"* %cd %an <%ae>%n- %s%n" --date=format:"%a %b %d %Y" $TRAVIS_COMMIT -n 1| sed 's/$/ \\/' && LANG=en git show  --pretty=format:"" $TRAVIS_TAG -q|cut -d$'\n' -f4-)
        # should use rpmbuild --define '', but whitespace and newline make it difficult...
        - echo "%define patchlevel $PATCHLEVEL\n" > $HOME/rpmbuild/SPECS/wine-nine.spec
        - echo "%define commithash $TRAVIS_COMMIT\n" >> $HOME/rpmbuild/SPECS/wine-nine.spec
        - echo "%define mytag $TRAVIS_TAG\n" >> $HOME/rpmbuild/SPECS/wine-nine.spec
        - echo "%define mychangelog $MYCHANGELOG\n" >> $HOME/rpmbuild/SPECS/wine-nine.spec
        - cat ./packaging/SPECS/wine-nine.spec >> $HOME/rpmbuild/SPECS/wine-nine.spec
        # create the SRPMs
        - sudo docker run -it --rm -v $HOME/rpmbuild/:/home/rpmbuild/rpmbuild:z mgruener/rpmbuild rpmbuild -bs --define 'dist .fc28' rpmbuild/SPECS/wine-nine.spec
        - sudo docker run -it --rm -v $HOME/rpmbuild/:/home/rpmbuild/rpmbuild:z mgruener/rpmbuild rpmbuild -bs --define 'dist .fc29' rpmbuild/SPECS/wine-nine.spec
        - mkdir -p $HOME/.config/
        - echo "$SIRO_COPR_KEY"|base64 -d - > $HOME/.config/copr
        # upload to copr
        - copr-cli build --nowait wine-nine $HOME/rpmbuild/SRPMS/wine-nine*.src.rpm


